./data/train/mel
Dataset size: 5000 images
Generator
  Total parameters: 48821864
  Trainable parameters: 48821864
Discriminator
  Total parameters: 34203201
  Trainable parameters: 34203201
Downloading: "https://download.pytorch.org/models/vgg16-397923af.pth" to /home/kusnierz/.cache/torch/hub/checkpoints/vgg16-397923af.pth
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 528M/528M [00:08<00:00, 65.8MB/s]
Epoch 1/200:   0%|                                                                                                          | 0/79 [00:01<?, ?it/s]
Iteration 0, Batch size: 64
Traceback (most recent call last):
  File "/home/kusnierz/repositories/project-pgm/train.py", line 33, in <module>
    main()
  File "/home/kusnierz/repositories/project-pgm/train.py", line 22, in main
    train_gan_model()
  File "/home/kusnierz/repositories/project-pgm/src/gan/train.py", line 141, in train_gan_model
    fake_images = G(z)
                  ^^^^
  File "/home/kusnierz/.venv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kusnierz/.venv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kusnierz/repositories/project-pgm/src/gan/models.py", line 130, in forward
    x, rgb_i = block(x, w)
               ^^^^^^^^^^^
  File "/home/kusnierz/.venv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kusnierz/.venv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kusnierz/repositories/project-pgm/src/gan/models.py", line 84, in forward
    x = self.conv2(x, w) + self.noise_scale2 * noise2
        ^^^^^^^^^^^^^^^^
  File "/home/kusnierz/.venv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kusnierz/.venv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kusnierz/repositories/project-pgm/src/gan/models.py", line 41, in forward
    demod = torch.rsqrt((weight**2).sum([2, 3, 4], keepdim=True) + 1e-8)
                         ~~~~~~^^~
  File "/home/kusnierz/.venv/lib/python3.11/site-packages/torch/_tensor.py", line 40, in wrapped
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 226.00 MiB. GPU 0 has a total capacity of 23.54 GiB of which 27.75 MiB is free. Including non-PyTorch memory, this process has 23.51 GiB memory in use. Of the allocated memory 22.66 GiB is allocated by PyTorch, and 372.74 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
